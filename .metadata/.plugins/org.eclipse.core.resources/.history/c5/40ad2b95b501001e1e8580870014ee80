/*
 * fingerprint.c
 *
 *  Created on: May 31, 2023
 *      Author: james
 */

#include "main.h"
#include "fingerprint.h"
#include "uart.h"

#define handshake 0xEF01FFFFFFFF010004170001C

//function that initializes the fingerprint scanner
/*
 * Settings:
 * 1. parameter number 4: N = 6 sets baud rate to 57600 (must match uart baudrate)
 * 2. parameter number 5: 3 (1-5) security level medium
 * 3. parameter number 6: 1 (0,1,2,3) = {32, 64, 128, 256} in bytes
 * 						  Resolution of fingerprint scanner
 */

void FP_init(void){
}


//--------------------Instructions to transmit
//Command to confirm if fingerprint is connected to upper computer
void FP_handshake(void){
	//13 Byte long (need to iterate 13 times)
	uint8_t i = 0;		//iteration counter
	char data;			//initializes byte being sent to TDR
	while (i < 13){ //sends lower byte 13 times over
		while (!(USART2->ISR & USART_ISR_TXE)); //waits for empty transmit
		data = (handshake >> 8*i) & 0xF;			//shifts and isolates from right to left
		USART2->TDR = data;
		i++;	//increments
	}
}



//MAKE SET ADDR UNSURE




//Sets parameters
/* PARAMETERS:
 * (4) Baud Rate
 * (5) Security Level
 * (6)
 *
 */
void FP_SetSysPara(char param, char setting){

}



/*void LPUART_ESC_Print(const char *message) {
	uint16_t iStrIdx = 0;
	while (!(LPUART1->ISR & USART_ISR_TXE))
		;
	LPUART1->TDR = 0x1b;	//initial escape code
	while (message[iStrIdx] != 0) {
		while (!(LPUART1->ISR & USART_ISR_TXE))
			; // wait for empty xmit buffer
		LPUART1->TDR = message[iStrIdx];       // send this character
		iStrIdx++;
		delay_us(200);       // advance index to next char
	}
	delay_us(1000);
}
*/

